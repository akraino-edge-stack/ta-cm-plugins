{
  "comments": [
    {
      "key": {
        "uuid": "3ffdad64_fc0dbf8f",
        "filename": "inventoryhandlers/baremetal-node-inventory/zbaremetalnodeinventory.py",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 186
      },
      "writtenOn": "2019-07-15T08:39:24Z",
      "side": 1,
      "message": "I believe here you should to use `get_hwmgmt_priv_level` method from the hosts cmdatahandler. You made this optional, and `get_hwmgmt_priv_level` can handle the absence of this config. This code would fail if `priv_level` is missing userconfig.",
      "range": {
        "startLine": 180,
        "startChar": 43,
        "endLine": 180,
        "endChar": 90
      },
      "revId": "23ebfd3c26806ea07c26446d9915edd169139d03",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2151904c_5e4bc6f0",
        "filename": "inventoryhandlers/baremetal-node-inventory/zbaremetalnodeinventory.py",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 43
      },
      "writtenOn": "2019-07-15T10:54:30Z",
      "side": 1,
      "message": "This reminds me of something that I thought of before but never captured in Jira. I believe we do not have a user_config validation tool. Is that correct? Not that it would matter for an optional parameter, but if we don\u0027t already have one, I would like to add a Jira story for future development of a tool that someone can run on their local machine to check user_config.yaml for errors before they start a new installation.",
      "parentUuid": "3ffdad64_fc0dbf8f",
      "range": {
        "startLine": 180,
        "startChar": 43,
        "endLine": 180,
        "endChar": 90
      },
      "revId": "23ebfd3c26806ea07c26446d9915edd169139d03",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfaa7f1a_7fca0806",
        "filename": "inventoryhandlers/baremetal-node-inventory/zbaremetalnodeinventory.py",
        "patchSetId": 8
      },
      "lineNbr": 180,
      "author": {
        "id": 183
      },
      "writtenOn": "2019-07-15T11:05:49Z",
      "side": 1,
      "message": "we do have validation, but that is part of the CMFramework.\nI believe you mean an offline validator? Yes, we don\u0027t have that.\nBut it need to basically contain, and call the existing CM frameworks validation API, because that\u0027s where all the checks are coded, it won\u0027t be a \"standalone\" binary\nit is possible though. we did a PoC like this with a GUI: UC generator + validator",
      "parentUuid": "2151904c_5e4bc6f0",
      "range": {
        "startLine": 180,
        "startChar": 43,
        "endLine": 180,
        "endChar": 90
      },
      "revId": "23ebfd3c26806ea07c26446d9915edd169139d03",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bc62251_eff6300d",
        "filename": "validators/src/HostsValidation.py",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 186
      },
      "writtenOn": "2019-07-15T08:39:24Z",
      "side": 1,
      "message": "Since `priv_level` is optional, this code would fail if it\u0027s missing from userconfig. Please run validation only if `priv_level` exists, or add a default value for the getter. https://docs.python.org/2/library/stdtypes.html#dict.get",
      "range": {
        "startLine": 417,
        "startChar": 21,
        "endLine": 417,
        "endChar": 45
      },
      "revId": "23ebfd3c26806ea07c26446d9915edd169139d03",
      "serverId": "4cada01b-0314-4fe0-84a1-f9ddc89863f9",
      "unresolved": true
    }
  ]
}